// Code generated by MockGen. DO NOT EDIT.
// Source: push_contact_to_sns.go

// Package handler is a generated GoMock package.
package handler

import (
	reflect "reflect"

	sns "github.com/aws/aws-sdk-go/service/sns"
	gomock "github.com/golang/mock/gomock"
)

// MockIPushContactToSNS is a mock of IPushContactToSNS interface.
type MockIPushContactToSNS struct {
	ctrl     *gomock.Controller
	recorder *MockIPushContactToSNSMockRecorder
}

// MockIPushContactToSNSMockRecorder is the mock recorder for MockIPushContactToSNS.
type MockIPushContactToSNSMockRecorder struct {
	mock *MockIPushContactToSNS
}

// NewMockIPushContactToSNS creates a new mock instance.
func NewMockIPushContactToSNS(ctrl *gomock.Controller) *MockIPushContactToSNS {
	mock := &MockIPushContactToSNS{ctrl: ctrl}
	mock.recorder = &MockIPushContactToSNSMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPushContactToSNS) EXPECT() *MockIPushContactToSNSMockRecorder {
	return m.recorder
}

// PublishContactIDToSNS mocks base method.
func (m *MockIPushContactToSNS) PublishContactIDToSNS(id string) (*sns.PublishOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PublishContactIDToSNS", id)
	ret0, _ := ret[0].(*sns.PublishOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PublishContactIDToSNS indicates an expected call of PublishContactIDToSNS.
func (mr *MockIPushContactToSNSMockRecorder) PublishContactIDToSNS(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PublishContactIDToSNS", reflect.TypeOf((*MockIPushContactToSNS)(nil).PublishContactIDToSNS), id)
}
